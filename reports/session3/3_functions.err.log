Traceback (most recent call last):
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/nhlist/opt/miniconda3/envs/bb1000_ht23/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Now to an example, where we try to access a variable outside scope. 
# Here we not pass in x as argument of the function. Rather x is defined outside the function (global variable), which means that Python can access its value inside the function BUT NOT modify it.
# To modify it, we would have to declare it a global variable inside the function

def show_x():
    """Prints value of x, adds one to it and print it again
    """
    print(x)
    x += 1
    print(x)

# declare global variable
x = 5
show_x()
print(x)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
Cell [0;32mIn[17], line 14[0m
[1;32m     12[0m [38;5;66;03m# declare global variable[39;00m
[1;32m     13[0m x [38;5;241m=[39m [38;5;241m5[39m
[0;32m---> 14[0m [43mshow_x[49m[43m([49m[43m)[49m
[1;32m     15[0m [38;5;28mprint[39m(x)

Cell [0;32mIn[17], line 8[0m, in [0;36mshow_x[0;34m()[0m
[1;32m      5[0m [38;5;28;01mdef[39;00m [38;5;21mshow_x[39m():
[1;32m      6[0m [38;5;250m    [39m[38;5;124;03m"""Prints value of x, adds one to it and print it again[39;00m
[1;32m      7[0m [38;5;124;03m    """[39;00m
[0;32m----> 8[0m     [38;5;28mprint[39m([43mx[49m)
[1;32m      9[0m     x [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[1;32m     10[0m     [38;5;28mprint[39m(x)

[0;31mUnboundLocalError[0m: local variable 'x' referenced before assignment
UnboundLocalError: local variable 'x' referenced before assignment

